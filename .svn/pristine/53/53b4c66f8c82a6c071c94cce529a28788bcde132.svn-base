from re import match

from django import forms
from django.forms.models import ModelForm
from django.forms.widgets import Textarea
from django.utils import formats

from base.models import Customer


class CustomerForm(ModelForm):

    first_name = forms.CharField(max_length=50)
    last_name = forms.CharField(max_length=50)
    email = forms.EmailField()
    comments = forms.CharField(max_length=250, widget=Textarea, required=False)
    company = forms.CharField(max_length=50, required=False)
    birthday = forms.DateField(required=False, label='Fecha de nacimiento')
    cellphone = forms.CharField(required=False, max_length=25, label='Telefono movil')
    phone_home = forms.CharField(required=False, max_length=25, label='Telefono casa')
    first_line = forms.CharField(max_length=150)
    second_line = forms.CharField(max_length=150, required=False)
    zip = forms.IntegerField(min_value=40)
    city = forms.CharField()

    # address = forms.CharField(required=False, max_length=250, widget=Textarea,label='Direcci√≥n')

    class Meta:
        model = Customer
        fields = ['suffix','prefix']

    def clean_cellphone(self):
        value = self.data['cellphone']
        if value:
            flag =  match(r'^[+]{0,1}\d+$',value)
            if flag:
                return value
            else:
                raise forms.ValidationError('Numero de telefono invalido')
        return value

    def clean_phone_home(self):
        value = self.data['phone_home']
        if value:
            flag =  match(r'^[+]{0,1}\d+$',value)
            if flag:
                return value
            else:
                raise forms.ValidationError('Numero de telefono invalido')
        return value


    # def clean_birthday(self):
    #     dt_value = self['birthday'].to_python(self.data['birthday'])
    #     dd_value = dt_value.date()
    #     dd_formatted = formats.date_format(dd_value, 'Y-m-d')
    #     return dd_formatted
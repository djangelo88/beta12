from Onboard import settings
from django.conf import settings
from django.http.response import HttpResponse, JsonResponse
from django.views.generic.base import View
from base.forms import BillingEmailForm
from base.models import Business
from stripe_cater.services import update_billing_email, cancel_subscription
from stripe_cater.services import ERRORS
import json

class UpdateBillingEmail(View):

    
    def post(self, request, *args, **kwargs):
        user = request.user
        business = Business.objects.get_business_by_user(user=user)
        localcustomer = business.stripecustomer
        data = json.loads(request.body.decode())

        form = BillingEmailForm(data)
        if form.is_valid():
            response = update_billing_email(localcustomer=localcustomer, new_email=form.cleaned_data['email'])
            print(response)
            if response in ERRORS:
                return JsonResponse(status=500, data={'message':'Lo sentimos, por favor intente nuevamente'}, safe=False)
            return JsonResponse(data={'message':'Su correo para los cobros ha sido actualizado'})
        else:
            return JsonResponse(status=400, safe=False, data=form.errors.as_json())

class CancelSubscription(View):

    def post(self, request, *args, **kwargs):
        user = request.user
        business = Business.objects.get_business_by_user(user=user)
        try:
            cancel_subscription(business.stripecustomer)
            return JsonResponse(data={'message':'Su suscripcion fue cancelada'}, safe=False)
        except Exception as e:
            print(e)
            return JsonResponse(status=500, data={'message': 'Lo sentimos, por favor intente nuevamente'}, safe=False)


class StripePublishableKey(View):

    def get(self, request, *args, **kwargs):
        pk = settings.STRIPE_PUBLISHABLE_KEY
        return JsonResponse(data={'publishable_key':pk})
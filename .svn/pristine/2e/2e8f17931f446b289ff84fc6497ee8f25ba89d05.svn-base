app.controller('CalendarController', ['$scope', '$window', '$aside', 'CalendarService', 'NotificationService', 'AlertConfirmService', '$rootScope', function ($scope, $window, $aside, CalendarService, NotificationService, AlertConfirmService, $rootScope) {


        var date = new Date();
        var d = date.getDate();
        var m = date.getMonth();
        var y = date.getFullYear();

        $scope.alertMessage = "Report all events from UI calendar.";
        // Events

        var date = new Date();
        var d = date.getDate();
        var m = date.getMonth();
        var y = date.getFullYear();

        $scope.alertMessage = "Report all events from UI calendar.";

        // Events
        $scope.events = [
            {title: 'All Day Event', start: new Date(y, m, 1)},
            {id: 999, title: 'Repeating Event', start: new Date(y, m, d - 3, 16, 0), allDay: false},
            {id: 999, title: 'Repeating Event', start: new Date(y, m, d + 4, 16, 0), allDay: false},
            {
                title: 'Birthday Party',
                start: new Date(y, m, d + 1, 19, 0),
                end: new Date(y, m, d + 1, 22, 30),
                allDay: false
            },
            {
                title: 'Homer task',
                start: new Date(y, m, d + 5, 19, 0),
                end: new Date(y, m, d + 6, 22, 30),
                allDay: false,
                backgroundColor: "#62cb31",
                borderColor: "#62cb31"
            },
            {title: 'Click for Google', start: new Date(y, m, 28), end: new Date(y, m, 29), url: 'http://google.com/'}
        ];


        /* message on eventClick */
        $scope.alertOnEventClick = function (event, allDay, jsEvent, view) {
            $scope.alertMessage = (event.title + ': Clicked ');
        };
        /* message on Drop */
        $scope.alertOnDrop = function (event, dayDelta, minuteDelta, allDay, revertFunc, jsEvent, ui, view) {
            $scope.alertMessage = (event.title + ': Droped to make dayDelta ' + dayDelta);
        };
        /* message on Resize */
        $scope.alertOnResize = function (event, dayDelta, minuteDelta, revertFunc, jsEvent, ui, view) {
            $scope.alertMessage = (event.title + ': Resized to make dayDelta ' + minuteDelta);
        };

        console.log($scope.myCalendar);
        /* config object */

        $rootScope.calendarConfig = {
            calendar: {
                height: 550,
                editable: true,
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month basicWeek basicDay agendaWeek agendaDay'
                },
                eventClick: $scope.alertOnEventClick,
                eventDrop: $scope.alertOnDrop,
                eventResize: $scope.alertOnResize

            }
        };

        // adding customers data
        var data = [];
        CalendarService.getAllEvents()
            .success(function (data, status, headers, config) {

                //angular.forEach(data, function (item) {
                //    item.icon = CalendarService.createIcon(item.status);
                //});

                console.log(data);
                $scope.data = data;

            });

        /* Event sources array */
        $rootScope.eventSources = [$scope.events];


// settings
        $scope.settings = {
            singular: 'Evento',
            plural: 'Eventos',
            cmd: 'Nuevo'
        };
//page
        $scope.page = {
            title: 'Listado de eventos',
            description: 'In most applications you need basic table listings and editing capabilities.' +
            ' With this app you can create simple admin functionality based on a json web service.',
            icon: 'md md-group'
        };

        var formTpl = $aside({
            scope: $scope,
            templateUrl: 'static/assets/tpl/calendar/event-view.html',
            show: false,
            placement: 'left',
            backdrop: false,
            animation: 'am-slide-left'

        });
//console.debug($hh);
        $scope.checkAll = function () {
            angular.forEach($scope.data, function (item) {
                item.selected = !item.selected;
            });
        };


        $scope.print = function () {
            return $window.print();
        }
        $scope.viewItem = function (item) {
            if (item) {
                item.editing = false;
                $scope.item = item;
                $scope.item.event_time = item.event_date;
                $scope.settings.cmd = 'View';

                $scope.settings.wizardEditMode = true;

                //resetAsideForm();

                showForm();
            }
        };

        showForm = function () {
            angular.element('.tooltip').remove();
            formTpl.show();
        };

        $scope.remove = function (item) {

            var callbackFn = function () {
            };

            if (item) {
                var callbackFn = function () {

                    CalendarService.delete(new Array(item))
                        .success(function () {
                            NotificationService.success('', 'Se ha canelado el evento seleccionado');
                            $scope.data.splice($scope.data.indexOf(item), 1);
                        }).error(function () {
                            NotificationService.error('Error', 'Ha existido un error al cancelar el evento seleccionado');
                        });
                }
                AlertConfirmService.basicConfirm("Eliminar", "Confirma que desea cancelar el evento seleccionado?", callbackFn);

            } else {

                callbackFn = function () {
                    var seleccionados = $scope.data.filter(
                        function (item) {
                            return item.selected;
                        }
                    );
                    CalendarService.delete(seleccionados).success(function () {
                        NotificationService.success('', 'Se han cancelado los eventos seleccionados');

                        for (index in seleccionados) {
                            $scope.data.splice($scope.data.indexOf(seleccionados[index]), 1);
                        }
                    }).error(function () {
                        NotificationService.error('Error', 'Ha existido un error al cancelar los eventos seleccionados');
                    });
                }
                AlertConfirmService.basicConfirm("Eliminar", "Confirma que desea cancelar los eventos seleccionados?", callbackFn);
            }


        };


    }
    ]
)
;




